!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACL	trx/api/core/acl/acl.ts	/^export class ACL<A extends AtomName> implements AccessLayer<A>{$/;"	c
AccessLayer	trx/api/core/typ/layer.ts	/^export interface AccessLayer<A extends AtomName> {$/;"	i
AdminStyle	typ/book_cln.ts	/^			export type AdminStyle = {$/;"	t
ApiInstance	trx/api/core/nst/index.ts	/^type ApiInstance<T> = T | undefined;$/;"	t
ApiInstance	trx/api/nst/index.ts	/^type ApiInstance<T> = T | undefined;$/;"	t
Arguments	trx/base/types.ts	/^	export type Arguments<A extends client_types.AtomName, R extends client_types.RouteName<A>> = {$/;"	t
ArrayElement	trx/api/typ/request.ts	/^type ArrayElement<ArrayType extends readonly unknown[]> =$/;"	t
Atom	trx/api/core/typ/atom.ts	/^export type Atom<A extends AtomName> =$/;"	t
Atom	trx/api/core/typ/book_cln.ts	/^				export interface Atom {$/;"	i
Atom	trx/api/core/typ/book_cln.ts	/^			export interface Atom extends SharedFields {$/;"	i
Atom	trx/api/typ/book_cln.ts	/^				export type Atom = urn_core_client.types.Book.Definition.Property.Validation.Atom;$/;"	t
Atom	trx/api/typ/book_cln.ts	/^			export type Atom = urn_core_client.types.Book.Definition.Property.Atom;$/;"	t
Atom	typ/book_cln.ts	/^				export type Atom = urn_trx_client.types.Book.Definition.Property.Validation.Atom;$/;"	t
Atom	typ/book_cln.ts	/^			export type Atom = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.Atom;$/;"	t
AtomArray	trx/api/core/typ/book_cln.ts	/^			export interface AtomArray extends SharedFields {$/;"	i
AtomArray	trx/api/typ/book_cln.ts	/^			export type AtomArray = urn_core_client.types.Book.Definition.Property.AtomArray;$/;"	t
AtomArray	typ/book_cln.ts	/^			export type AtomArray = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.AtomArray;$/;"	t
AtomHardProperties	trx/api/core/typ/atom.ts	/^type AtomHardProperties = {$/;"	t
AtomMoleculeBondPropertyType	trx/api/core/typ/atom.ts	/^export type AtomMoleculeBondPropertyType<$/;"	t
AtomName	trx/api/core/typ/atom.ts	/^export type AtomName = keyof typeof atom_book;$/;"	t
AtomOrMolecule	trx/api/core/typ/atom.ts	/^type AtomOrMolecule = 'atom' | 'molecule';$/;"	t
AtomPrimitiveShape	trx/api/core/typ/atom.ts	/^type AtomPrimitiveShape<A extends AtomName> =$/;"	t
AtomShape	trx/api/core/typ/atom.ts	/^export type AtomShape<A extends AtomName> =$/;"	t
AuthAction	trx/api/core/typ/auth.ts	/^export enum AuthAction {$/;"	e
AuthAtom	trx/api/core/typ/atom.ts	/^export type AuthAtom<A extends AuthName> =$/;"	t
AuthAtomShape	trx/api/core/typ/atom.ts	/^export type AuthAtomShape<A extends AuthName> =$/;"	t
AuthBLL	trx/api/core/bll/auth.ts	/^export class AuthBLL<A extends AtomName> extends SecurityBLL<A>{$/;"	c
AuthHandler	trx/api/typ/request.ts	/^export type AuthHandler<A extends types.AtomName, R extends RouteName<A>> =$/;"	t
AuthName	trx/api/core/typ/atom.ts	/^export type AuthName = keyof ExtractAuthName<typeof atom_book>;$/;"	t
AuthenticationBLL	trx/api/core/bll/authenticate.ts	/^class AuthenticationBLL<A extends AuthName> {$/;"	c
AuthenticationBLLInstance	trx/api/core/bll/authenticate.ts	/^export type AuthenticationBLLInstance = InstanceType<typeof AuthenticationBLL>;$/;"	t
AxiosRaw	trx/raw/axios.ts	/^class AxiosRaw<A extends client_types.AtomName> implements RAW<A>{$/;"	c
AxiosRawInstance	trx/raw/axios.ts	/^export type AxiosRawInstance = InstanceType<typeof AxiosRaw>;$/;"	t
BLL	trx/api/core/bll/bll.ts	/^export class BLL<A extends AtomName> extends AuthBLL<A>{}$/;"	c
BLLInstance	trx/api/core/bll/create.ts	/^export type BLLInstance = InstanceType<typeof BLL>;$/;"	t
Base	trx/base/class.ts	/^class Base<A extends client_types.AtomName> {$/;"	c
BaseInstance	trx/base/class.ts	/^export type BaseInstance = InstanceType<typeof Base>;$/;"	t
BasicBLL	trx/api/core/bll/basic.ts	/^export class BasicBLL<A extends AtomName> {$/;"	c
BasicDAL	trx/api/core/dal/basic.ts	/^export class BasicDAL<A extends AtomName> implements AccessLayer<A>{$/;"	c
BasicDefinition	trx/api/core/typ/book_cln.ts	/^	export type BasicDefinition = {$/;"	t
BasicDefinition	trx/api/core/typ/book_srv.ts	/^	export type BasicDefinition =$/;"	t
BasicDefinition	trx/api/typ/book_cln.ts	/^	export type BasicDefinition =$/;"	t
BasicDefinition	trx/api/typ/book_srv.ts	/^	export type BasicDefinition =$/;"	t
BasicDefinition	typ/book_cln.ts	/^	export type BasicDefinition =$/;"	t
BasicDefinition	typ/book_srv.ts	/^	export type BasicDefinition =$/;"	t
Binary	trx/api/core/typ/book_cln.ts	/^			export interface Binary extends SharedFields {$/;"	i
Binary	trx/api/typ/book_cln.ts	/^			export type Binary = urn_core_client.types.Book.Definition.Property.Binary;$/;"	t
Binary	typ/book_cln.ts	/^			export type Binary = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.Binary;$/;"	t
BllReturnType	trx/api/core/bll/create.ts	/^type BllReturnType<T, A extends AtomName> = T extends (...args:any) => BLL<A> ?$/;"	t
BondPropertyDefinition	trx/api/core/typ/atom.ts	/^type BondPropertyDefinition = {type: BookPropertyType.ATOM} | {type: BookPropertyType.ATOM_ARRAY};$/;"	t
BondShape	trx/api/core/typ/atom.ts	/^type BondShape<A extends AtomName, AoM extends AtomOrMolecule, D extends Depth> =$/;"	t
Book	trx/api/core/typ/book_cln.ts	/^export type Book = {$/;"	t
Book	trx/api/core/typ/book_srv.ts	/^export type Book = {$/;"	t
Book	trx/api/typ/book_cln.ts	/^export type Book = {$/;"	t
Book	trx/api/typ/book_srv.ts	/^export type Book = {$/;"	t
Book	typ/book_cln.ts	/^export type Book = {$/;"	t
Book	typ/book_srv.ts	/^export type Book = {$/;"	t
BookPropertyStringType	trx/api/core/typ/common.ts	/^export const BookPropertyStringType = {$/;"	v
Call	trx/api/typ/book_srv.ts	/^					export type Call<A extends urn_core.types.AtomName, R extends RouteName<A>> =$/;"	t
Callback	trx/api/service/express/class.ts	/^type Callback = () => void;$/;"	t
Checked	nuxt/components/UI/AllTable/AllTable.ts	/^type Checked = {$/;"	t
ClientConfiguration	trx/typ/conf_cln.ts	/^export type ClientConfiguration =$/;"	t
Comparsion	trx/api/core/typ/query.ts	/^	type Comparsion<T> =$/;"	t
Computed	nuxt/components/AtomNav.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Form/Atom.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Modal/Atom.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/ATOM.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/ATOMARRAY.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/BINARY.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/DAY.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/EMAIL.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/ENCRYPTED.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/ENUM.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/FLOAT.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/HIDDEN.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/INTEGER.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/LONGTEXT.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/ReadOnly.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/SET.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/Shared.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/TEXT.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/Property/TIME.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/UI/AllBodyHeader/AllBodyHeader.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/UI/AllTable/AllTable.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/UI/Button/Button.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/UI/Checkbox/Checkbox.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/UI/ObjectInspector/ObjectInspector.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/UI/Pagination/Pagination.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/UI/RadioButton/RadioButton.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/UI/RadioGroup/RadioGroup.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/UI/Section/SideBarBody.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/UI/SideBarEntry/SideBarEntry.ts	/^type Computed = {$/;"	t
Computed	nuxt/components/UI/SideBarLabel/SideBarLabel.ts	/^type Computed = {$/;"	t
Computed	nuxt/pages/urn-admin/_atom/_slug.ts	/^type Computed = {$/;"	t
Configuration	trx/api/core/typ/conf.ts	/^export type Configuration = RequiredConfigParams & Partial<OptionalConfigParam>;$/;"	t
Configuration	trx/api/typ/conf.ts	/^export type Configuration =$/;"	t
Configuration	trx/typ/conf.ts	/^export type Configuration =$/;"	t
Configuration	typ/conf.ts	/^export type Configuration =$/;"	t
ConnectionInstance	trx/api/core/rel/mongo/connection.ts	/^export type ConnectionInstance = InstanceType<typeof MongooseDBConnection>;$/;"	t
ConnectionName	trx/api/core/typ/book_cln.ts	/^export type ConnectionName = 'main' | 'trash' | 'log';$/;"	t
Context	nuxt/pages/urn-admin/_slug.ts	/^type Context = {$/;"	t
CustomBLL	trx/api/core/bll/create.ts	/^type CustomBLL<A extends AtomName> =$/;"	t
CustomResponse	trx/base/types.ts	/^	export type CustomResponse<A extends client_types.AtomName, R extends client_types.RouteName<A>> =$/;"	t
CustomRouteQueryParam	trx/api/typ/request.ts	/^type CustomRouteQueryParam<A extends types.AtomName, R extends RouteName<A>> =$/;"	t
CustomRouteQueryParamArray	trx/api/typ/request.ts	/^type CustomRouteQueryParamArray<A extends types.AtomName, R extends RouteName<A>> =$/;"	t
CustomRouteURL	trx/api/typ/request.ts	/^type CustomRouteURL<A extends types.AtomName, R extends RouteName<A>> =$/;"	t
DAL	trx/api/core/dal/dal.ts	/^export class DAL<A extends AtomName> extends SelfishDAL<A>{}$/;"	c
Data	nuxt/components/AtomNav.ts	/^type Data = {$/;"	t
Data	nuxt/components/Form/Atom.ts	/^type Data = {$/;"	t
Data	nuxt/components/Modal/Atom.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/ATOM.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/ATOMARRAY.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/BINARY.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/DAY.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/EMAIL.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/ENCRYPTED.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/ENUM.ts	/^type Data<T extends EnumNS> = {$/;"	t
Data	nuxt/components/Property/FLOAT.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/HIDDEN.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/INTEGER.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/LONGTEXT.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/ReadOnly.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/SET.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/Shared.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/TEXT.ts	/^type Data = {$/;"	t
Data	nuxt/components/Property/TIME.ts	/^type Data = {$/;"	t
Data	nuxt/components/UI/AllBodyHeader/AllBodyHeader.ts	/^type Data = {$/;"	t
Data	nuxt/components/UI/AllTable/AllTable.ts	/^type Data = {$/;"	t
Data	nuxt/components/UI/Button/Button.ts	/^type Data = {$/;"	t
Data	nuxt/components/UI/Checkbox/Checkbox.ts	/^type Data = {$/;"	t
Data	nuxt/components/UI/ObjectInspector/ObjectInspector.ts	/^type Data = {$/;"	t
Data	nuxt/components/UI/Pagination/Pagination.ts	/^type Data = {$/;"	t
Data	nuxt/components/UI/RadioButton/RadioButton.ts	/^type Data = {$/;"	t
Data	nuxt/components/UI/RadioGroup/RadioGroup.ts	/^type Data = {$/;"	t
Data	nuxt/components/UI/Section/SideBarBody.ts	/^type Data = {$/;"	t
Data	nuxt/components/UI/SideBarEntry/SideBarEntry.ts	/^type Data = {$/;"	t
Data	nuxt/components/UI/SideBarLabel/SideBarLabel.ts	/^type Data = {$/;"	t
Data	nuxt/pages/index.ts	/^type Data = {$/;"	t
Data	nuxt/pages/urn-admin/_atom/_slug.ts	/^type Data<A extends uranio.types.AtomName> = {$/;"	t
Data	nuxt/pages/urn-admin/_atom/new.ts	/^type Data = {$/;"	t
DatabaseType	trx/api/core/typ/conf.ts	/^export type DatabaseType = 'mongo'; \/\/ | 'mysql'$/;"	t
Day	trx/api/core/typ/book_cln.ts	/^			export interface Day extends SharedFields {$/;"	i
Day	trx/api/typ/book_cln.ts	/^			export type Day = urn_core_client.types.Book.Definition.Property.Day;$/;"	t
Day	typ/book_cln.ts	/^			export type Day = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.Day;$/;"	t
DayTime	trx/api/core/typ/book_cln.ts	/^				export interface DayTime {$/;"	i
DayTime	trx/api/core/typ/book_cln.ts	/^			export type DayTime =$/;"	t
DayTime	trx/api/typ/book_cln.ts	/^				export type DayTime = urn_core_client.types.Book.Definition.Property.Validation.DayTime;$/;"	t
DayTime	trx/api/typ/book_cln.ts	/^			export type DayTime = urn_core_client.types.Book.Definition.Property.DayTime;$/;"	t
DayTime	typ/book_cln.ts	/^				export type DayTime = urn_trx_client.types.Book.Definition.Property.Validation.DayTime;$/;"	t
DayTime	typ/book_cln.ts	/^			export type DayTime = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.DayTime;$/;"	t
DefaultResponse	trx/base/types.ts	/^	export type DefaultResponse<A extends client_types.AtomName, R extends client_types.RouteDefaultName, D extends client_types.Depth> =$/;"	t
DefaultRouteQuery	trx/api/typ/request.ts	/^type DefaultRouteQuery<A extends types.AtomName, R extends RouteName<A>> =$/;"	t
DefaultRouteQueryParamArray	trx/api/typ/request.ts	/^type DefaultRouteQueryParamArray<A extends types.AtomName, R extends RouteName<A>> =$/;"	t
DefaultRouteURL	trx/api/typ/request.ts	/^type DefaultRouteURL<A extends types.AtomName, R extends RouteName<A>> =$/;"	t
Definition	trx/api/core/typ/book_cln.ts	/^	export type Definition =$/;"	t
Definition	trx/api/core/typ/book_srv.ts	/^	export type Definition<A extends AtomName> =$/;"	t
Definition	trx/api/typ/book_cln.ts	/^	export type Definition =$/;"	t
Definition	trx/api/typ/book_srv.ts	/^	export type Definition<A extends urn_core.types.AtomName> =$/;"	t
Definition	typ/book_cln.ts	/^	export type Definition =$/;"	t
Definition	typ/book_srv.ts	/^	export type Definition<A extends urn_trx.types.AtomName> =$/;"	t
DefinitionPropertyInferBondAtomName	trx/api/core/typ/atom.ts	/^type DefinitionPropertyInferBondAtomName<P> =$/;"	t
DefinitionPropertyInferType	trx/api/core/typ/atom.ts	/^type DefinitionPropertyInferType<P> = P extends {type: infer I} ? I : never;$/;"	t
DefinitionPropertyIsBondArray	trx/api/core/typ/atom.ts	/^type DefinitionPropertyIsBondArray<P> =$/;"	t
DefinitionTypeOfCommonProperty	trx/api/core/typ/atom.ts	/^type DefinitionTypeOfCommonProperty<k extends KeyOfCommonProperties> =$/;"	t
DefinitionTypeOfDefintionProperty	trx/api/core/typ/atom.ts	/^type DefinitionTypeOfDefintionProperty<A extends AtomName, k extends KeyOfPropertyOfAtomDefinition<A>> =$/;"	t
DefinitionTypeOfHardProperty	trx/api/core/typ/atom.ts	/^type DefinitionTypeOfHardProperty<k extends KeyOfHardProperties> =$/;"	t
Depth	trx/api/core/typ/atom.ts	/^export type Depth = undefined | 0 | 1 | 2 | 3;$/;"	t
Dock	trx/api/core/typ/book_cln.ts	/^		export type Dock = {$/;"	t
Dock	trx/api/typ/book_cln.ts	/^		export type Dock = {$/;"	t
Dock	trx/api/typ/book_srv.ts	/^		export type Dock = book_cln.Book.Definition.Dock;$/;"	t
Dock	typ/book_cln.ts	/^		export type Dock = urn_trx_client.types.Book.Definition.Dock;$/;"	t
Email	trx/api/core/typ/book_cln.ts	/^			export interface Email extends SharedFields {$/;"	i
Email	trx/api/typ/book_cln.ts	/^			export type Email = urn_core_client.types.Book.Definition.Property.Email;$/;"	t
Email	typ/book_cln.ts	/^			export type Email = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.Email;$/;"	t
EncryptDAL	trx/api/core/dal/encrypt.ts	/^export class EncryptDAL<A extends AtomName> extends ValidateDAL<A>{$/;"	c
Encrypted	trx/api/core/typ/book_cln.ts	/^			export interface Encrypted extends SharedFields {$/;"	i
Encrypted	trx/api/typ/book_cln.ts	/^			export type Encrypted = urn_core_client.types.Book.Definition.Property.Encrypted;$/;"	t
Encrypted	typ/book_cln.ts	/^			export type Encrypted = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.Encrypted;$/;"	t
Entry	nuxt/components/UI/Section/SideBarBody.ts	/^export type Entry = {$/;"	t
Enum	trx/api/core/typ/book_cln.ts	/^			export type Enum =$/;"	t
Enum	trx/api/typ/book_cln.ts	/^			export type Enum = urn_core_client.types.Book.Definition.Property.Enum;$/;"	t
Enum	typ/book_cln.ts	/^			export type Enum = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.Enum;$/;"	t
EnumNS	nuxt/components/Property/ENUM.ts	/^type EnumNS =$/;"	t
EnumNSValues	nuxt/components/Property/ENUM.ts	/^type EnumNSValues<T extends EnumNS> =$/;"	t
EnumNumber	trx/api/core/typ/book_cln.ts	/^			export interface EnumNumber extends SharedFields {$/;"	i
EnumNumber	trx/api/typ/book_cln.ts	/^			export type EnumNumber = urn_core_client.types.Book.Definition.Property.EnumNumber;$/;"	t
EnumNumber	typ/book_cln.ts	/^			export type EnumNumber = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.EnumNumber;$/;"	t
EnumString	trx/api/core/typ/book_cln.ts	/^			export interface EnumString extends SharedFields {$/;"	i
EnumString	trx/api/typ/book_cln.ts	/^			export type EnumString = urn_core_client.types.Book.Definition.Property.EnumString;$/;"	t
EnumString	typ/book_cln.ts	/^			export type EnumString = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.EnumString;$/;"	t
Equal	trx/api/core/typ/query.ts	/^	export type Equal<A extends AtomName> =$/;"	t
ErrorParams	nuxt/pages/urn-admin/_slug.ts	/^type ErrorParams = {$/;"	t
EventHeaders	trx/api/lambda/types.ts	/^interface EventHeaders {$/;"	i
EventMultiValueHeaders	trx/api/lambda/types.ts	/^interface EventMultiValueHeaders {$/;"	i
EventMultiValueQueryStringParameters	trx/api/lambda/types.ts	/^interface EventMultiValueQueryStringParameters {$/;"	i
EventQueryStringParameters	trx/api/lambda/types.ts	/^interface EventQueryStringParameters {$/;"	i
ExPayload	trx/raw/axios.ts	/^type ExPayload = {$/;"	t
ExcludeBondAndBondArray	trx/api/core/typ/atom.ts	/^type ExcludeBondAndBondArray<P> = OmitSubType<P, BondPropertyDefinition>;$/;"	t
ExcludeOptional	trx/api/core/typ/atom.ts	/^type ExcludeOptional<P> = OmitSubType<P, {optional: true}>;$/;"	t
ExpressQueryParam	trx/api/lambda/netlify/types.ts	/^export type ExpressQueryParam =$/;"	t
ExpressQueryParam	trx/api/service/express/types.ts	/^export type ExpressQueryParam =$/;"	t
ExpressWebService	trx/api/service/express/class.ts	/^class ExpressWebService implements Service {$/;"	c
Expression	trx/api/core/typ/query.ts	/^	export type Expression<A extends AtomName> = Equal<A> | WithComparsion<A>;$/;"	t
ExtendedSharedFields	typ/book_cln.ts	/^			export type ExtendedSharedFields = {$/;"	t
ExtractAuthName	trx/api/core/typ/atom.ts	/^type ExtractAuthName<P> = PickSubType<P, {dock: {auth: string}}>;$/;"	t
ExtractBond	trx/api/core/typ/atom.ts	/^type ExtractBond<P> = PickSubType<P, BondPropertyDefinition>;$/;"	t
ExtractLogAtom	trx/api/core/typ/atom.ts	/^type ExtractLogAtom<P> = PickSubType<P, {connection: 'log'}>;$/;"	t
ExtractOptional	trx/api/core/typ/atom.ts	/^type ExtractOptional<P> = PickSubType<P, {optional: true}>;$/;"	t
ExtractParamFrom	trx/api/typ/request.ts	/^type ExtractParamFrom<URI extends string> =$/;"	t
Float	trx/api/core/typ/book_cln.ts	/^				export interface Float {$/;"	i
Float	trx/api/core/typ/book_cln.ts	/^			export interface Float extends SharedFields {$/;"	i
Float	trx/api/typ/book_cln.ts	/^				export type Float = urn_core_client.types.Book.Definition.Property.Format.Float;$/;"	t
Float	trx/api/typ/book_cln.ts	/^			export type Float = urn_core_client.types.Book.Definition.Property.Float;$/;"	t
Float	typ/book_cln.ts	/^				export type Float = urn_trx_client.types.Book.Definition.Property.Format.Float;$/;"	t
Float	typ/book_cln.ts	/^			export type Float = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.Float;$/;"	t
FullClientConfiguration	trx/typ/conf_cln.ts	/^export type FullClientConfiguration =$/;"	t
FullConfiguration	trx/api/core/typ/conf.ts	/^export type FullConfiguration = RequiredConfigParams & OptionalConfigParam;$/;"	t
FullConfiguration	trx/api/typ/conf.ts	/^export type FullConfiguration =$/;"	t
FullConfiguration	trx/typ/conf.ts	/^export type FullConfiguration =$/;"	t
FullConfiguration	typ/conf.ts	/^export type FullConfiguration =$/;"	t
Handler	trx/api/lambda/types.ts	/^export interface Handler {$/;"	i
HandlerCallback	trx/api/lambda/types.ts	/^export interface HandlerCallback {$/;"	i
HandlerResponse	trx/api/lambda/types.ts	/^export interface HandlerResponse {$/;"	i
Headers	trx/api/typ/request.ts	/^		export type Headers = {$/;"	t
ID	trx/api/core/typ/book_cln.ts	/^			export interface ID extends SharedFields {$/;"	i
ID	trx/api/typ/book_cln.ts	/^			export type ID = urn_core_client.types.Book.Definition.Property.ID;$/;"	t
ID	typ/book_cln.ts	/^			export type ID = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.ID;$/;"	t
Integer	trx/api/core/typ/book_cln.ts	/^			export interface Integer extends SharedFields {$/;"	i
Integer	trx/api/typ/book_cln.ts	/^			export type Integer = urn_core_client.types.Book.Definition.Property.Integer;$/;"	t
Integer	typ/book_cln.ts	/^			export type Integer = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.Integer;$/;"	t
KeyOfCommonProperties	trx/api/core/typ/atom.ts	/^export type KeyOfCommonProperties = keyof typeof atom_common_properties;$/;"	t
KeyOfHardProperties	trx/api/core/typ/atom.ts	/^export type KeyOfHardProperties = keyof typeof atom_hard_properties;$/;"	t
KeyOfPropertyOfAtomDefinition	trx/api/core/typ/atom.ts	/^export type KeyOfPropertyOfAtomDefinition<A extends AtomName> = keyof PropertiesOfAtomDefinition<A>;$/;"	t
Lambda	trx/api/lambda/types.ts	/^export interface Lambda {$/;"	i
LambdaContext	trx/api/lambda/types.ts	/^export interface LambdaContext {$/;"	i
LambdaEvent	trx/api/lambda/types.ts	/^export interface LambdaEvent {$/;"	i
LambdaHeaders	trx/api/lambda/types.ts	/^export interface LambdaHeaders {$/;"	i
LambdaMultiValueHeaders	trx/api/lambda/types.ts	/^export interface LambdaMultiValueHeaders {$/;"	i
LambdaName	trx/api/lambda/types.ts	/^export type LambdaName = 'netlify'; \/\/ | 'aws'$/;"	t
LogBLL	trx/api/core/bll/log.ts	/^class LogBLL<A extends LogName> extends BasicBLL<A>{$/;"	c
LogDAL	trx/api/core/dal/log.ts	/^export class LogDAL<A extends LogName> extends DAL<A>{$/;"	c
LogName	trx/api/core/typ/atom.ts	/^export type LogName = keyof ExtractLogAtom<typeof atom_book>;$/;"	t
Logical	trx/api/core/typ/query.ts	/^	export type Logical<A extends AtomName> =$/;"	t
LongText	trx/api/core/typ/book_cln.ts	/^			export interface LongText extends SharedFields {$/;"	i
LongText	trx/api/typ/book_cln.ts	/^			export type LongText = urn_core_client.types.Book.Definition.Property.LongText;$/;"	t
LongText	typ/book_cln.ts	/^			export type LongText = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.LongText;$/;"	t
MapType	trx/api/core/typ/auth.ts	/^export type MapType<T> =$/;"	t
Methods	nuxt/components/AtomNav.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Form/Atom.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Modal/Atom.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/ATOM.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/ATOMARRAY.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/BINARY.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/DAY.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/EMAIL.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/ENCRYPTED.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/ENUM.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/FLOAT.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/HIDDEN.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/INTEGER.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/LONGTEXT.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/ReadOnly.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/SET.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/Shared.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/TEXT.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/Property/TIME.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/UI/AllBodyHeader/AllBodyHeader.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/UI/AllTable/AllTable.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/UI/Button/Button.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/UI/Checkbox/Checkbox.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/UI/ObjectInspector/ObjectInspector.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/UI/Pagination/Pagination.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/UI/RadioButton/RadioButton.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/UI/RadioGroup/RadioGroup.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/UI/Section/SideBarBody.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/UI/SideBarEntry/SideBarEntry.ts	/^type Methods = {$/;"	t
Methods	nuxt/components/UI/SideBarLabel/SideBarLabel.ts	/^type Methods = {$/;"	t
Methods	nuxt/pages/urn-admin/_atom/_slug.ts	/^type Methods<A extends uranio.types.AtomName> = {$/;"	t
Methods	nuxt/pages/urn-admin/_atom/new.ts	/^type Methods = {$/;"	t
Molecule	trx/api/core/typ/atom.ts	/^export type Molecule<A extends AtomName, D extends Depth = 0> =$/;"	t
MongoApp	trx/api/core/rel/mongo/models.ts	/^type MongoApp = {$/;"	t
MongoConnections	trx/api/core/rel/mongo/models.ts	/^type MongoConnections = {$/;"	t
MongoModels	trx/api/core/rel/mongo/models.ts	/^type MongoModels = {$/;"	t
MongooseDBConnection	trx/api/core/rel/mongo/connection.ts	/^class MongooseDBConnection {$/;"	c
MongooseLogRelation	trx/api/core/rel/mongo/log.ts	/^export class MongooseLogRelation<A extends AtomName> extends MongooseRelation<A>$/;"	c
MongooseRelation	trx/api/core/rel/mongo/relation.ts	/^export class MongooseRelation<A extends AtomName> implements Relation<A> {$/;"	c
MongooseTrashRelation	trx/api/core/rel/mongo/trash.ts	/^export class MongooseTrashRelation<A extends AtomName> extends MongooseRelation<A>$/;"	c
NetlifyLambda	trx/api/lambda/netlify/class.ts	/^class NetlifyLambda implements Lambda {$/;"	c
Number	trx/api/core/typ/book_cln.ts	/^				export interface Number {$/;"	i
Number	trx/api/core/typ/book_cln.ts	/^			export type Number =$/;"	t
Number	trx/api/typ/book_cln.ts	/^				export type Number = urn_core_client.types.Book.Definition.Property.Validation.Number;$/;"	t
Number	trx/api/typ/book_cln.ts	/^			export type Number = urn_core_client.types.Book.Definition.Property.Number;$/;"	t
Number	typ/book_cln.ts	/^				export type Number = urn_trx_client.types.Book.Definition.Property.Validation.Number;$/;"	t
Number	typ/book_cln.ts	/^			export type Number = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.Number;$/;"	t
OmitSubType	trx/api/core/typ/atom.ts	/^type OmitSubType<Base, Condition> = Omit<Base, {$/;"	t
OptionalBond	trx/api/core/typ/atom.ts	/^type OptionalBond<P> = PickSubType<ExtractBond<P>, {optional: true}>;$/;"	t
OptionalClientConfigParam	trx/typ/conf_cln.ts	/^type OptionalClientConfigParam = {$/;"	t
OptionalConfigParam	trx/api/core/typ/conf.ts	/^type OptionalConfigParam = {$/;"	t
OptionalConfigParam	trx/api/typ/conf.ts	/^type OptionalConfigParam = {$/;"	t
OptionalConfigParam	trx/typ/conf.ts	/^type OptionalConfigParam = {$/;"	t
OptionalConfigParam	typ/conf.ts	/^type OptionalConfigParam = {$/;"	t
OptionalKeyOfAtomCommonProperties	trx/api/core/typ/atom.ts	/^type OptionalKeyOfAtomCommonProperties =$/;"	t
OptionalKeyOfAtomPrimitiveProperties	trx/api/core/typ/atom.ts	/^type OptionalKeyOfAtomPrimitiveProperties<A extends AtomName> =$/;"	t
OptionalKeyOfBondProperties	trx/api/core/typ/atom.ts	/^type OptionalKeyOfBondProperties<A extends AtomName> =$/;"	t
OptionalPrimitive	trx/api/core/typ/atom.ts	/^type OptionalPrimitive<P> = PickSubType<ExcludeBondAndBondArray<P>, {optional: true}>;$/;"	t
Options	trx/api/core/typ/query.ts	/^	export type Options<A extends AtomName, D extends Depth = 0> = {$/;"	t
Page	nuxt/pages/urn-admin/_slug.ts	/^export type Page = {$/;"	t
Params	trx/api/typ/request.ts	/^		export type Params<A extends types.AtomName, R extends RouteName<A>> = {$/;"	t
Params	trx/base/types.ts	/^	export type Params<A extends client_types.AtomName, R extends client_types.RouteName<A>> =$/;"	t
Passport	trx/api/core/typ/auth.ts	/^export type Passport = {$/;"	t
PassportKey	trx/api/core/typ/auth.ts	/^export type PassportKey = keyof typeof abstract_passport;$/;"	t
Paths	trx/api/typ/request.ts	/^		export type Paths = {$/;"	t
PickSubType	trx/api/core/typ/atom.ts	/^type PickSubType<Base, Condition> = Pick<Base, {$/;"	t
PopulateObject	trx/api/core/rel/mongo/types.ts	/^export type PopulateObject = {$/;"	t
Properties	trx/api/core/typ/book_cln.ts	/^		export type Properties = {$/;"	t
Properties	trx/api/typ/book_cln.ts	/^		export type Properties = urn_core_client.types.Book.Definition.Properties;$/;"	t
Properties	typ/book_cln.ts	/^		export type Properties = {$/;"	t
PropertiesOfAtomDefinition	trx/api/core/typ/atom.ts	/^type PropertiesOfAtomDefinition<A extends AtomName> = typeof atom_book[A]['properties'];$/;"	t
Property	trx/api/core/typ/book_cln.ts	/^		export type Property =$/;"	t
Property	trx/api/typ/book_cln.ts	/^		export type Property = urn_core_client.types.Book.Definition.Property;$/;"	t
Property	typ/book_cln.ts	/^		export type Property =$/;"	t
Props	nuxt/components/AtomNav.ts	/^type Props = {$/;"	t
Props	nuxt/components/Form/Atom.ts	/^type Props<A extends uranio.types.AtomName> = {$/;"	t
Props	nuxt/components/Modal/Atom.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/ATOM.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/ATOMARRAY.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/BINARY.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/DAY.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/EMAIL.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/ENCRYPTED.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/ENUM.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/FLOAT.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/HIDDEN.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/INTEGER.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/LONGTEXT.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/ReadOnly.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/SET.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/Shared.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/TEXT.ts	/^type Props = {$/;"	t
Props	nuxt/components/Property/TIME.ts	/^type Props = {$/;"	t
Props	nuxt/components/UI/AllBodyHeader/AllBodyHeader.ts	/^type Props = {$/;"	t
Props	nuxt/components/UI/AllTable/AllTable.ts	/^type Props = {$/;"	t
Props	nuxt/components/UI/Button/Button.ts	/^type Props = {$/;"	t
Props	nuxt/components/UI/Checkbox/Checkbox.ts	/^type Props = {$/;"	t
Props	nuxt/components/UI/ObjectInspector/ObjectInspector.ts	/^type Props = {$/;"	t
Props	nuxt/components/UI/Pagination/Pagination.ts	/^type Props = {$/;"	t
Props	nuxt/components/UI/RadioButton/RadioButton.ts	/^type Props = {$/;"	t
Props	nuxt/components/UI/RadioGroup/RadioGroup.ts	/^type Props = {$/;"	t
Props	nuxt/components/UI/Section/SideBarBody.ts	/^type Props = {$/;"	t
Props	nuxt/components/UI/SideBarEntry/SideBarEntry.ts	/^type Props = {$/;"	t
Props	nuxt/components/UI/SideBarLabel/SideBarLabel.ts	/^type Props = {$/;"	t
Props	nuxt/pages/urn-admin/_atom/_slug.ts	/^type Props = {$/;"	t
Props	nuxt/pages/urn-admin/_atom/new.ts	/^type Props = {$/;"	t
Provide	nuxt/components/Property.ts	/^type Provide = {$/;"	t
Provide	nuxt/pages/urn-admin/_atom/new.ts	/^type Provide = {$/;"	t
Query	trx/api/core/typ/query.ts	/^export type Query<A extends AtomName> = Query.Expression<A> | Query.Logical<A>;$/;"	t
Query	trx/api/typ/request.ts	/^		export type Query<A extends types.AtomName, R extends RouteName<A>> = {$/;"	t
Query	trx/base/types.ts	/^	export type Query<A extends client_types.AtomName, R extends client_types.RouteName<A>> =$/;"	t
QueryAtomKey	trx/api/core/typ/query.ts	/^	type QueryAtomKey<A extends AtomName> =$/;"	t
QueryAtomRealType	trx/api/core/typ/query.ts	/^	type QueryAtomRealType<A extends AtomName, P extends QueryAtomKey<A>> =$/;"	t
QueryParamsObject	trx/api/lambda/util.ts	/^type QueryParamsObject = {$/;"	t
QueryString	trx/api/lambda/netlify/types.ts	/^import QueryString from 'qs';$/;"	I
QueryString	trx/api/service/express/types.ts	/^import QueryString from 'qs';$/;"	I
RAW	trx/raw/types.ts	/^export interface RAW<A extends client_types.AtomName> {$/;"	i
RadioItems	nuxt/components/UI/RadioGroup/RadioGroup.ts	/^type RadioItems = {$/;"	t
RawName	trx/raw/types.ts	/^export type RawName = 'axios'; \/\/ japi, fetch$/;"	t
RealType	trx/api/core/typ/common.ts	/^export type RealType<AT extends BookPropertyType> =$/;"	t
RealTypeOfAtomCommonProperty	trx/api/core/typ/atom.ts	/^export type RealTypeOfAtomCommonProperty<k extends KeyOfCommonProperties> =$/;"	t
RealTypeOfAtomHardProperty	trx/api/core/typ/atom.ts	/^export type RealTypeOfAtomHardProperty<k extends KeyOfHardProperties> =$/;"	t
RealTypeOfAtomProperty	trx/api/core/typ/atom.ts	/^export type RealTypeOfAtomProperty<A extends AtomName, k extends KeyOfPropertyOfAtomDefinition<A>> =$/;"	t
RealTypeOfMoleculeBondProperty	trx/api/core/typ/atom.ts	/^type RealTypeOfMoleculeBondProperty<A extends AtomName, k extends KeyOfPropertyOfAtomDefinition<A>, D extends Depth> =$/;"	t
RecycleDAL	trx/api/core/dal/recycle.ts	/^export class RecycleDAL<A extends AtomName> extends EncryptDAL<A>{$/;"	c
Relation	trx/api/core/rel/types.ts	/^export interface Relation<A extends AtomName> {$/;"	i
RelationDAL	trx/api/core/dal/rel.ts	/^export class RelationDAL<A extends AtomName> extends BasicDAL<A>{$/;"	c
Request	trx/api/typ/request.ts	/^	export type Request<A extends types.AtomName, R extends RouteName<A>> =$/;"	t
RequiredBond	trx/api/core/typ/atom.ts	/^type RequiredBond<P> = OmitSubType<ExtractBond<P>, {optional: true}>;$/;"	t
RequiredClientConfigParams	trx/typ/conf_cln.ts	/^type RequiredClientConfigParams = {$/;"	t
RequiredConfigParams	trx/api/core/typ/conf.ts	/^type RequiredConfigParams = {$/;"	t
RequiredConfigParams	trx/api/typ/conf.ts	/^type RequiredConfigParams = {$/;"	t
RequiredConfigParams	trx/typ/conf.ts	/^type RequiredConfigParams = {$/;"	t
RequiredConfigParams	typ/conf.ts	/^type RequiredConfigParams = {$/;"	t
RequiredKeyOfAtomCommonProperties	trx/api/core/typ/atom.ts	/^type RequiredKeyOfAtomCommonProperties =$/;"	t
RequiredKeyOfAtomPrimitiveProperties	trx/api/core/typ/atom.ts	/^type RequiredKeyOfAtomPrimitiveProperties<A extends AtomName> =$/;"	t
RequiredKeyOfBondProperties	trx/api/core/typ/atom.ts	/^type RequiredKeyOfBondProperties<A extends AtomName> =$/;"	t
RequiredPrimitive	trx/api/core/typ/atom.ts	/^type RequiredPrimitive<P> = OmitSubType<ExcludeBondAndBondArray<P>, {optional: true}>;$/;"	t
Response	trx/base/types.ts	/^	export type Response<A extends client_types.AtomName, R extends client_types.RouteName<A>, D extends client_types.Depth> =$/;"	t
ReturnData	nuxt/pages/urn-admin/_slug.ts	/^type ReturnData<N extends uranio.types.AtomName> = {$/;"	t
ReturnState	nuxt/store/modalAtom.ts	/^type ReturnState = {$/;"	t
RootState	nuxt/store/modalAtom.ts	/^export type RootState = ReturnType<typeof state>$/;"	t
Route	trx/api/typ/book_cln.ts	/^				export type Route = {$/;"	t
Route	trx/api/typ/book_srv.ts	/^				export type Route<A extends urn_core.types.AtomName, R extends RouteName<A>> =$/;"	t
Route	typ/book_cln.ts	/^				export type Route = urn_trx_client.types.Book.Definition.Dock.Routes.Route;$/;"	t
RouteCustomName	trx/api/typ/route.ts	/^export type RouteCustomName<A extends AtomName> =$/;"	t
RouteDefaultName	trx/api/typ/route.ts	/^export type RouteDefaultName =$/;"	t
RouteName	trx/api/typ/route.ts	/^export type RouteName<A extends AtomName> =$/;"	t
RouteParam	trx/api/typ/request.ts	/^export type RouteParam<A extends types.AtomName, R extends RouteName<A>> =$/;"	t
RouteQueryParam	trx/api/typ/request.ts	/^export type RouteQueryParam<A extends types.AtomName, R extends RouteName<A>> =$/;"	t
RouteQueryParamValue	trx/api/typ/request.ts	/^export type RouteQueryParamValue<A extends types.AtomName, R extends RouteName<A>, K extends RouteQueryParam<A,R>> =$/;"	t
RouteURL	trx/api/typ/request.ts	/^type RouteURL<A extends types.AtomName, R extends RouteName<A>> =$/;"	t
Routes	trx/api/typ/book_cln.ts	/^			export type Routes = {$/;"	t
Routes	trx/api/typ/book_srv.ts	/^			export type Routes = book_cln.Book.Definition.Dock.Routes;$/;"	t
Routes	typ/book_cln.ts	/^			export type Routes = urn_trx_client.types.Book.Definition.Dock.Routes;$/;"	t
Security	trx/api/core/typ/book_srv.ts	/^		export type Security = {$/;"	t
SecurityBLL	trx/api/core/bll/security.ts	/^export class SecurityBLL<A extends AtomName> extends BasicBLL<A> {$/;"	c
SelfishDAL	trx/api/core/dal/selfish.ts	/^export class SelfishDAL<A extends AtomName> extends RecycleDAL<A>{$/;"	c
Service	trx/api/service/types.ts	/^export interface Service {$/;"	i
ServiceName	trx/api/service/types.ts	/^export type ServiceName = 'express'; \/\/ | 'hapi' | 'nest_js'$/;"	t
Set	trx/api/core/typ/book_cln.ts	/^			export type Set =$/;"	t
Set	trx/api/typ/book_cln.ts	/^			export type Set = urn_core_client.types.Book.Definition.Property.Set;$/;"	t
Set	typ/book_cln.ts	/^			export type Set = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.Set;$/;"	t
SetNumber	trx/api/core/typ/book_cln.ts	/^				export interface SetNumber {$/;"	i
SetNumber	trx/api/core/typ/book_cln.ts	/^			export interface SetNumber extends SharedFields {$/;"	i
SetNumber	trx/api/typ/book_cln.ts	/^				export type SetNumber = urn_core_client.types.Book.Definition.Property.Validation.SetNumber;$/;"	t
SetNumber	trx/api/typ/book_cln.ts	/^			export type SetNumber = urn_core_client.types.Book.Definition.Property.SetString;$/;"	t
SetNumber	typ/book_cln.ts	/^				export type SetNumber = urn_trx_client.types.Book.Definition.Property.Validation.SetNumber;$/;"	t
SetNumber	typ/book_cln.ts	/^			export type SetNumber = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.SetString;$/;"	t
SetString	trx/api/core/typ/book_cln.ts	/^				export interface SetString {$/;"	i
SetString	trx/api/core/typ/book_cln.ts	/^			export interface SetString extends SharedFields {$/;"	i
SetString	trx/api/typ/book_cln.ts	/^				export type SetString = urn_core_client.types.Book.Definition.Property.Validation.SetString;$/;"	t
SetString	trx/api/typ/book_cln.ts	/^			export type SetString = urn_core_client.types.Book.Definition.Property.SetNumber;$/;"	t
SetString	typ/book_cln.ts	/^				export type SetString = urn_trx_client.types.Book.Definition.Property.Validation.SetString;$/;"	t
SetString	typ/book_cln.ts	/^			export type SetString = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.SetNumber;$/;"	t
SharedFields	trx/api/core/typ/book_cln.ts	/^			export interface SharedFields {$/;"	i
SimpleAtom	nuxt/components/Property/ATOMARRAY.ts	/^type SimpleAtom = {$/;"	t
SimpleAtom	nuxt/components/Property/BINARY.ts	/^type SimpleAtom = {$/;"	t
SimpleAtom	nuxt/components/Property/DAY.ts	/^type SimpleAtom = {$/;"	t
SimpleAtom	nuxt/components/Property/ENUM.ts	/^type SimpleAtom = {$/;"	t
SimpleAtom	nuxt/components/Property/FLOAT.ts	/^type SimpleAtom = {$/;"	t
SimpleAtom	nuxt/components/Property/INTEGER.ts	/^type SimpleAtom = {$/;"	t
SimpleAtom	nuxt/components/Property/SET.ts	/^type SimpleAtom = {$/;"	t
SimpleAtom	nuxt/components/Property/TIME.ts	/^type SimpleAtom = {$/;"	t
SortBy	nuxt/pages/urn-admin/_slug.ts	/^type SortBy = {$/;"	t
SortItem	nuxt/components/UI/AllBodyHeader/AllBodyHeader.ts	/^type SortItem = {$/;"	t
SortValue	nuxt/components/UI/AllBodyHeader/AllBodyHeader.ts	/^type SortValue = {$/;"	t
String	trx/api/core/typ/book_cln.ts	/^				export interface String {$/;"	i
String	trx/api/core/typ/book_cln.ts	/^			export type String =$/;"	t
String	trx/api/typ/book_cln.ts	/^				export type String = urn_core_client.types.Book.Definition.Property.Validation.String;$/;"	t
String	trx/api/typ/book_cln.ts	/^			export type String = urn_core_client.types.Book.Definition.Property.String;$/;"	t
String	typ/book_cln.ts	/^				export type String = urn_trx_client.types.Book.Definition.Property.Validation.String;$/;"	t
String	typ/book_cln.ts	/^			export type String = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.String;$/;"	t
Text	trx/api/core/typ/book_cln.ts	/^			export interface Text extends SharedFields {$/;"	i
Text	trx/api/typ/book_cln.ts	/^			export type Text = urn_core_client.types.Book.Definition.Property.Text;$/;"	t
Text	typ/book_cln.ts	/^			export type Text = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.Text;$/;"	t
Time	trx/api/core/typ/book_cln.ts	/^			export interface Time extends SharedFields {$/;"	i
Time	trx/api/typ/book_cln.ts	/^			export type Time = urn_core_client.types.Book.Definition.Property.Time;$/;"	t
Time	typ/book_cln.ts	/^			export type Time = ExtendedSharedFields & urn_trx_client.types.Book.Definition.Property.Time;$/;"	t
UIAtomProp	nuxt/components/Form/Atom.ts	/^export type UIAtomProp = {$/;"	t
UIAtomProps	nuxt/components/Form/Atom.ts	/^type UIAtomProps = {$/;"	t
Unset	trx/api/core/rel/mongo/relation.ts	/^type Unset = {$/;"	t
ValidateDAL	trx/api/core/dal/validate.ts	/^export class ValidateDAL<A extends AtomName> extends RelationDAL<A>{$/;"	c
Vue	nuxt/components/AtomNav.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/Form/Atom.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/Modal/Atom.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/Property.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/Property/EMAIL.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/Property/ENCRYPTED.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/Property/HIDDEN.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/Property/LONGTEXT.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/Property/ReadOnly.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/Property/Shared.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/Property/TEXT.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/UI/AllBodyHeader/AllBodyHeader.ts	/^import Vue from "vue";$/;"	I
Vue	nuxt/components/UI/AllTable/AllTable.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/UI/Button/Button.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/UI/Checkbox/Checkbox.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/UI/ObjectInspector/ObjectInspector.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/UI/Pagination/Pagination.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/UI/RadioButton/RadioButton.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/UI/RadioGroup/RadioGroup.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/UI/Section/SideBarBody.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/UI/SideBarEntry/SideBarEntry.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/components/UI/SideBarLabel/SideBarLabel.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/pages/index.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/pages/urn-admin/_atom/_slug.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/pages/urn-admin/_atom/new.ts	/^import Vue from 'vue';$/;"	I
Vue	nuxt/store/modalAtom.ts	/^import Vue from 'vue';$/;"	I
WithComparsion	trx/api/core/typ/query.ts	/^	type WithComparsion<A extends AtomName> =$/;"	t
_add_schema_middleware	trx/api/core/rel/mongo/models.ts	/^function _add_schema_middleware<A extends AtomName>($/;"	f
_al	trx/api/core/bll/basic.ts	/^	protected _al:AccessLayer<A>;$/;"	m
_auth_validate	trx/api/mdlw/mdlw.ts	/^function _auth_validate<A extends types.AtomName, R extends types.RouteName<A>>(api_request:types.Api.Request<A,R>)$/;"	f
_auth_validate_and_call	trx/api/mdlw/mdlw.ts	/^async function _auth_validate_and_call<A extends types.AtomName, R extends types.RouteName<A>>($/;"	f
_authorization	trx/api/mdlw/mdlw.ts	/^async function _authorization<A extends types.AtomName, R extends types.RouteName<A>>(api_request:types.Api.Request<A,R>) {$/;"	f
_basic_bll	trx/api/core/bll/authenticate.ts	/^	private _basic_bll:BasicBLL<A>;$/;"	m
_can_atom_write	trx/api/core/acl/acl.ts	/^	protected async _can_atom_write(id:string)$/;"	m
_can_uniform_read	trx/api/core/acl/acl.ts	/^	protected _can_uniform_read()$/;"	m
_can_uniform_write	trx/api/core/acl/acl.ts	/^	protected _can_uniform_write()$/;"	m
_check_atom_name	trx/base/class.ts	/^function _check_atom_name(atom_name:client_types.AtomName)$/;"	f
_check_ids	trx/api/core/dal/validate.ts	/^function _check_ids<A extends AtomName>($/;"	f
_check_passport_key_type	trx/api/core/bll/authenticate.ts	/^function _check_passport_key_type(passport:Passport, key:PassportKey)$/;"	f
_check_unique	trx/api/core/dal/validate.ts	/^	protected async _check_unique(partial_atom:Partial<AtomShape<A>>, id?:string)$/;"	m
_clean_atom	nuxt/pages/urn-admin/_atom/_slug.ts	/^function _clean_atom<A extends uranio.types.AtomName>(atom_name:A, atom:uranio.types.Atom<A>)$/;"	f
_clean_atom	trx/api/core/rel/mongo/relation.ts	/^function _clean_atom<A extends AtomName>(atom_name:A, atom:Atom<A>)$/;"	f
_clean_molecule	trx/api/core/rel/mongo/relation.ts	/^function _clean_molecule<A extends AtomName, D extends Depth>(atom_name:A, molecule:Molecule<A,D>)$/;"	f
_clean_unset	trx/api/core/rel/mongo/relation.ts	/^function _clean_unset<A extends AtomName>(atom_name:A, partial_atom:Partial<AtomShape<A>>){$/;"	f
_conn_name	trx/api/core/rel/mongo/relation.ts	/^	protected _conn_name:ConnectionName;$/;"	m
_connection	trx/api/core/rel/mongo/connection.ts	/^	private _connection:mongoose.Connection;$/;"	m
_convert_for_trash	trx/api/core/rel/mongo/models.ts	/^function _convert_for_trash(schema_definition:mongoose.SchemaDefinition)$/;"	f
_create_connection	trx/api/core/rel/mongo/models.ts	/^function _create_connection(conn_name:ConnectionName){$/;"	f
_create_models	trx/api/core/rel/mongo/models.ts	/^function _create_models(mongoose_db_connection:mongo_connection.ConnectionInstance, connection?:ConnectionName){$/;"	f
_custom_validate_bond_atom	trx/api/core/atm/validate.ts	/^function _custom_validate_bond_atom<A extends AtomName, D extends Depth>($/;"	f
_custom_validate_number	trx/api/core/atm/validate.ts	/^function _custom_validate_number<A extends AtomName>($/;"	f
_custom_validate_set_number	trx/api/core/atm/validate.ts	/^function _custom_validate_set_number<A extends AtomName>($/;"	f
_custom_validate_set_string	trx/api/core/atm/validate.ts	/^function _custom_validate_set_string<A extends AtomName>($/;"	f
_custom_validate_string	trx/api/core/atm/validate.ts	/^function _custom_validate_string<A extends AtomName>($/;"	f
_custom_validate_time	trx/api/core/atm/validate.ts	/^function _custom_validate_time<A extends AtomName>($/;"	f
_dal	trx/api/core/acl/acl.ts	/^	protected _dal:urn_dal.DAL<A>;$/;"	m
_delete_cascade	trx/api/core/rel/mongo/models.ts	/^async function _delete_cascade($/;"	f
_empty_required_properties	nuxt/components/Form/Atom.ts	/^function _empty_required_properties<A extends uranio.types.AtomName>(atom_name: A, atom:uranio.types.Atom<A>)$/;"	f
_encrypt_changed_properties	trx/api/core/dal/encrypt.ts	/^	protected async _encrypt_changed_properties(id:string, atom:Atom<A> | Partial<AtomShape<A>>)$/;"	m
_encrypt_changed_properties	trx/api/core/dal/encrypt.ts	/^	protected async _encrypt_changed_properties(id:string, atom:Atom<A>)$/;"	m
_encrypt_changed_properties	trx/api/core/dal/encrypt.ts	/^	protected async _encrypt_changed_properties(id:string, atom:Partial<AtomShape<A>>)$/;"	m
_fill_style	nuxt/components/Form/Atom.ts	/^function _fill_style(prop_def_style?:uranio.types.Book.Definition.Property.AdminStyle)$/;"	f
_filter_lambda_body_request	trx/api/lambda/netlify/class.ts	/^function _filter_lambda_body_request(event:LambdaEvent){$/;"	f
_find_unsets	trx/api/core/rel/mongo/relation.ts	/^function _find_unsets<A extends AtomName>(atom_name:A, partial_atom:Partial<AtomShape<A>>){$/;"	f
_fix_atom_on_validation_error	trx/api/core/dal/selfish.ts	/^	private async _fix_atom_on_validation_error(atom:Atom<A>)$/;"	m
_fix_molecule_on_validation_error	trx/api/core/dal/selfish.ts	/^	private async _fix_molecule_on_validation_error<D extends Depth>(molecule:Molecule<A,D>, depth?:D)$/;"	m
_generate_date_schema_options	trx/api/core/rel/mongo/schema.ts	/^function _generate_date_schema_options($/;"	f
_generate_enum_schema_options	trx/api/core/rel/mongo/schema.ts	/^function _generate_enum_schema_options($/;"	f
_generate_mongoose_schema_type_options	trx/api/core/rel/mongo/schema.ts	/^function _generate_mongoose_schema_type_options(atom_name: AtomName, prop_def:Book.Definition.Property, prop_key:string)$/;"	f
_generate_number_schema_options	trx/api/core/rel/mongo/schema.ts	/^function _generate_number_schema_options($/;"	f
_generate_passport	trx/api/core/bll/authenticate.ts	/^	private _generate_passport(auth_atom:AuthAtom<A>)$/;"	m
_generate_populate_obj	trx/api/core/rel/mongo/relation.ts	/^function _generate_populate_obj<A extends AtomName>(atom_name:A, depth?:number, depth_query?:Query<A>)$/;"	f
_generate_string_schema_options	trx/api/core/rel/mongo/schema.ts	/^function _generate_string_schema_options($/;"	f
_generate_subatomkey_populate_obj	trx/api/core/rel/mongo/relation.ts	/^function _generate_subatomkey_populate_obj<A extends AtomName>($/;"	f
_generate_token	trx/api/core/bll/authenticate.ts	/^	private _generate_token(auth_atom:AuthAtom<A>)$/;"	m
_get_atom_dock	trx/api/mdlw/mdlw.ts	/^function _get_atom_dock<A extends types.AtomName>(atom_name:A)$/;"	f
_get_atom_dock	trx/api/routes/routes.ts	/^function _get_atom_dock(atom_name:types.AtomName)$/;"	f
_get_atom_dock	trx/api/util/request.ts	/^function _get_atom_dock(atom_name:types.AtomName){$/;"	f
_get_conn_name	trx/api/core/rel/mongo/log.ts	/^	protected _get_conn_name():ConnectionName{$/;"	m
_get_conn_name	trx/api/core/rel/mongo/relation.ts	/^	protected _get_conn_name():ConnectionName{$/;"	m
_get_conn_name	trx/api/core/rel/mongo/trash.ts	/^	protected _get_conn_name():ConnectionName{$/;"	m
_get_route	trx/base/class.ts	/^function _get_route<A extends client_types.AtomName>($/;"	f
_get_route_def	trx/api/mdlw/mdlw.ts	/^function _get_route_def<A extends types.AtomName, R extends types.RouteName<A>>(api_request:types.Api.Request<A,R>)$/;"	f
_handle_axios_call	trx/raw/axios.ts	/^async function _handle_axios_call(handler:() => Promise<AxiosResponse>)$/;"	f
_has_all_properties	trx/api/core/atm/validate.ts	/^function _has_all_properties<A extends AtomName>(atom_name:A, atom_shape:AtomShape<A>)$/;"	f
_has_no_other_properties	trx/api/core/atm/validate.ts	/^function _has_no_other_properties<A extends AtomName>(atom_name:A, partial_atom:Partial<AtomShape<A>>)$/;"	f
_hide_hidden_properties_single_molecule	trx/api/core/atm/util.ts	/^function _hide_hidden_properties_single_molecule<A extends AtomName, D extends Depth>(atom_name:A, molecule:Molecule<A,D>)$/;"	f
_is_base_query_type	trx/api/core/val/query.ts	/^function _is_base_query_type(val:any)$/;"	f
_is_empty_id	trx/api/core/dal/validate.ts	/^function _is_empty_id(id:string){$/;"	f
_is_valid_id	trx/api/core/rel/mongo/relation.ts	/^function _is_valid_id(id:string)$/;"	f
_lambda_request_to_partial_api_request	trx/api/lambda/netlify/class.ts	/^function _lambda_request_to_partial_api_request(event: LambdaEvent, context: LambdaContext){$/;"	f
_lambda_response	trx/api/lambda/netlify/class.ts	/^function _lambda_response($/;"	f
_limit	trx/api/mdlw/mdlw.ts	/^function _limit<A extends types.AtomName, R extends types.RouteName<A>>($/;"	f
_log_auth_route_request	trx/api/mdlw/mdlw.ts	/^function _log_auth_route_request<A extends types.AtomName, R extends types.RouteName<A>>(auth_request: types.Api.Request<A,R>)$/;"	f
_log_route_request	trx/api/mdlw/mdlw.ts	/^function _log_route_request<A extends types.AtomName, R extends types.RouteName<A>>(api_request: types.Api.Request<A,R>)$/;"	f
_on_close	trx/api/core/rel/mongo/connection.ts	/^	private _on_close()$/;"	m
_on_connected	trx/api/core/rel/mongo/connection.ts	/^	private _on_connected()$/;"	m
_on_connecting	trx/api/core/rel/mongo/connection.ts	/^	private _on_connecting()$/;"	m
_on_disconnected	trx/api/core/rel/mongo/connection.ts	/^	private _on_disconnected()$/;"	m
_on_disconnecting	trx/api/core/rel/mongo/connection.ts	/^	private _on_disconnecting()$/;"	m
_on_error	trx/api/core/rel/mongo/connection.ts	/^	private _on_error(e:Error)$/;"	m
_on_reconnect_failed	trx/api/core/rel/mongo/connection.ts	/^	private _on_reconnect_failed()$/;"	m
_on_reconnect_tries	trx/api/core/rel/mongo/connection.ts	/^	private _on_reconnect_tries()$/;"	m
_on_reconnected	trx/api/core/rel/mongo/connection.ts	/^	private _on_reconnected()$/;"	m
_process_atom	nuxt/pages/urn-admin/_atom/new.ts	/^function _process_atom<A extends uranio.types.AtomName>($/;"	f
_raw	trx/api/core/rel/mongo/relation.ts	/^	protected _raw:mongoose.Model<mongoose.Document>;$/;"	m
_read	trx/api/core/acl/acl.ts	/^	protected _read?:RealType<BookPropertyType.ID>;$/;"	m
_read_query	trx/api/core/acl/acl.ts	/^	protected _read_query:Query<A>;$/;"	m
_replace_atom_on_error	trx/api/core/dal/selfish.ts	/^	protected async _replace_atom_on_error(id:string, atom:Atom<A>)$/;"	m
_replace_molecule_on_error	trx/api/core/dal/selfish.ts	/^	protected async _replace_molecule_on_error<D extends Depth>(id:string, molecule:Molecule<A,D>, depth?:D)$/;"	m
_return_acl	trx/api/core/bll/security.ts	/^function _return_acl<A extends AtomName>(atom_name:A, passport?:Passport) {$/;"	f
_return_express_auth_middleware	trx/api/service/express/routes/auth.ts	/^function _return_express_auth_middleware<A extends types.AtomName, R extends types.RouteName<A>>(handler: types.AuthHandler<A,R>){$/;"	f
_return_express_middleware	trx/api/service/express/routes/default.ts	/^function _return_express_middleware(){$/;"	f
_security_type	trx/api/core/acl/acl.ts	/^	protected _security_type:BookSecurityType;$/;"	m
_set_and_remove_headers	trx/api/service/express/routes/common.ts	/^function _set_and_remove_headers(urn_res:urn_response.General<any,any>, res:express.Response)$/;"	f
_trash_dal	trx/api/core/dal/recycle.ts	/^	private _trash_dal?:BasicDAL<A>;$/;"	m
_url_with_query	trx/raw/axios.ts	/^function _url_with_query<A extends client_types.AtomName, R extends client_types.RouteName<A>>($/;"	f
_validate_and_call	trx/api/mdlw/mdlw.ts	/^async function _validate_and_call<A extends types.AtomName, R extends types.RouteName<A>>(api_request: types.Api.Request<A,R>){$/;"	f
_validate_bond_type	trx/api/core/atm/validate.ts	/^function _validate_bond_type<A extends AtomName>($/;"	f
_validate_custom_bond_type	trx/api/core/atm/validate.ts	/^function _validate_custom_bond_type<A extends AtomName>($/;"	f
_validate_custom_type	trx/api/core/atm/validate.ts	/^function _validate_custom_type<A extends AtomName>($/;"	f
_validate_expression	trx/api/core/val/query.ts	/^function _validate_expression<A extends AtomName>(field:Query.Expression<A>, atom_name:A)$/;"	f
_validate_hard_properties	trx/api/core/atm/validate.ts	/^function _validate_hard_properties<A extends AtomName>(atom:Atom<A>)$/;"	f
_validate_id	trx/api/core/dal/validate.ts	/^function _validate_id($/;"	f
_validate_molecule_bond_properties	trx/api/core/atm/validate.ts	/^function _validate_molecule_bond_properties<A extends AtomName, D extends Depth>($/;"	f
_validate_partial_atom_bond_properties	trx/api/core/atm/validate.ts	/^function _validate_partial_atom_bond_properties<A extends AtomName>($/;"	f
_validate_primitive_properties	trx/api/core/atm/validate.ts	/^function _validate_primitive_properties<A extends AtomName>($/;"	f
_validate_primitive_type	trx/api/core/atm/validate.ts	/^function _validate_primitive_type<A extends AtomName>($/;"	f
_validate_route	trx/api/mdlw/mdlw.ts	/^function _validate_route<A extends types.AtomName, R extends types.RouteName<A>>(api_request:types.Api.Request<A,R>)$/;"	f
_write	trx/api/core/acl/acl.ts	/^	protected _write?:RealType<BookPropertyType.ID>;$/;"	m
abstract_passport	trx/api/core/stc/static.ts	/^export const abstract_passport = {$/;"	v
actions	nuxt/store/modalAtom.ts	/^export const actions: ActionTree<RootState, RootState> = {$/;"	v
alter_by_id	trx/api/core/acl/acl.ts	/^	public async alter_by_id(id:string, partial_atom:Partial<AtomShape<A>>)$/;"	m
alter_by_id	trx/api/core/dal/basic.ts	/^	public async alter_by_id(id:string, partial_atom:Partial<AtomShape<A>>)$/;"	m
alter_by_id	trx/api/core/dal/encrypt.ts	/^	public async alter_by_id(id:string, partial_atom:Partial<AtomShape<A>>)$/;"	m
alter_by_id	trx/api/core/dal/validate.ts	/^	public async alter_by_id(id:string, partial_atom:Partial<AtomShape<A>>)$/;"	m
alter_by_id	trx/api/core/rel/mongo/relation.ts	/^	public async alter_by_id(id:string, partial_atom:Partial<AtomShape<A>>)$/;"	m
any	trx/api/core/atm/validate.ts	/^export function any<A extends AtomName, D extends Depth>($/;"	f
any	trx/api/core/atm/validate.ts	/^export function any<A extends AtomName>($/;"	f
api	cln/main.ts	/^import api from 'uranio-api\/client';$/;"	I
api	srv/main.ts	/^import api from 'uranio-api';$/;"	I
api	trx/cln/main.ts	/^import api from 'uranio-api\/client';$/;"	I
api	trx/srv/main.ts	/^import api from 'uranio-api';$/;"	I
api_config	trx/api/conf/defaults.ts	/^export const api_config:FullConfiguration = {$/;"	v
api_handle_and_store_exception	trx/api/util/request.ts	/^export function api_handle_and_store_exception<A extends types.AtomName, R extends types.RouteName<A>>($/;"	f
api_handle_exception	trx/api/util/request.ts	/^export function api_handle_exception<A extends types.AtomName, R extends types.RouteName<A>>($/;"	f
atom	books.ts	/^export const atom = {$/;"	v
atom	trx/api/books.ts	/^export const atom = {$/;"	v
atom	trx/api/core/atm/validate.ts	/^export function atom<A extends AtomName>(atom_name:A, atom:Atom<A>)$/;"	f
atom	trx/api/core/books.ts	/^export const atom = {$/;"	v
atom	trx/books.ts	/^export const atom = {$/;"	v
atom_common_properties	trx/api/core/stc/static.ts	/^export const atom_common_properties = {$/;"	v
atom_dock_with_defaults	trx/api/routes/client.ts	/^export function atom_dock_with_defaults($/;"	f
atom_dock_with_defaults	trx/api/routes/routes.ts	/^export function atom_dock_with_defaults($/;"	f
atom_dock_with_defaults	trx/api/routes/server.ts	/^export function atom_dock_with_defaults($/;"	f
atom_hard_properties	trx/api/core/stc/static.ts	/^export const atom_hard_properties = {$/;"	v
atom_partial	trx/api/core/atm/validate.ts	/^export function atom_partial<A extends AtomName>(atom_name:A, partial_atom:Partial<AtomShape<A>>)$/;"	f
atom_partial	trx/api/core/atm/validate.ts	/^export function atom_partial<A extends AtomName>(atom_name:A, partial_atom:Partial<AtomShape<A>>):true;$/;"	f
atom_partial	trx/api/core/atm/validate.ts	/^export function atom_partial<A extends AuthName>(atom_name:A, partial_atom:Partial<AtomShape<A>>):true;$/;"	f
atom_shape	trx/api/core/atm/validate.ts	/^export function atom_shape<A extends AtomName>(atom_name:A, atom_shape:AtomShape<A>)$/;"	f
auth_route_middleware	trx/api/mdlw/mdlw.ts	/^export async function auth_route_middleware<A extends types.AtomName, R extends types.RouteName<A>>($/;"	f
authenticate	trx/api/core/bll/authenticate.ts	/^	public async authenticate(email: string, password: string)$/;"	m
axios	trx/raw/axios.ts	/^import axios, {AxiosInstance, AxiosRequestConfig, AxiosResponse} from 'axios';$/;"	I
bcrypt	trx/api/core/atm/encrypt.ts	/^import bcrypt from 'bcryptjs';$/;"	I
bcrypt	trx/api/core/bll/authenticate.ts	/^import bcrypt from 'bcryptjs';$/;"	I
bll	books.ts	/^export const bll = {$/;"	v
bll	trx/api/books.ts	/^export const bll = {$/;"	v
bll	trx/api/core/books.ts	/^export const bll = {$/;"	v
bll	trx/books.ts	/^export const bll = {$/;"	v
client	trx/api/core/run.ts	/^import client from '.\/client';$/;"	I
close	trx/api/core/rel/mongo/connection.ts	/^	public async close()$/;"	m
connect	trx/api/core/cnn/cnn.ts	/^export function connect()$/;"	f
connect_and_create	trx/api/lambda/index.ts	/^export function connect_and_create(lambda_name?:LambdaName)$/;"	f
connect_and_create	trx/api/lambda/netlify/class.ts	/^export function connect_and_create():NetlifyLambda{$/;"	f
core	cln/main.ts	/^import core from 'uranio-core\/client';$/;"	I
core	srv/main.ts	/^import core from 'uranio-core';$/;"	I
core	trx/api/srv/main.ts	/^import core from 'uranio-core';$/;"	I
core	trx/cln/main.ts	/^import core from 'uranio-core\/client';$/;"	I
core	trx/srv/main.ts	/^import core from 'uranio-core';$/;"	I
core_config	trx/api/core/conf/defaults.ts	/^export const core_config:FullConfiguration = {$/;"	v
cors	trx/api/service/express/class.ts	/^import cors from 'cors';$/;"	I
count	trx/api/core/acl/acl.ts	/^	public async count(query:Query<A>)$/;"	m
count	trx/api/core/bll/basic.ts	/^	public async count(query:Query<A>)$/;"	m
count	trx/api/core/dal/basic.ts	/^	public async count(query:Query<A>)$/;"	m
count	trx/api/core/rel/mongo/relation.ts	/^	public async count(query:Query<A>)$/;"	m
create	trx/api/core/acl/acl.ts	/^export function create<A extends AtomName>(atom_name:A, user_groups:RealType<BookPropertyType.ID>[])$/;"	f
create	trx/api/core/bll/authenticate.ts	/^export function create<A extends AuthName>(atom_name:A)$/;"	f
create	trx/api/core/bll/basic.ts	/^export function create<A extends AtomName>(atom_name:A)$/;"	f
create	trx/api/core/bll/create.ts	/^export function create<A extends AtomName>(atom_name:A, passport?:Passport)$/;"	f
create	trx/api/core/bll/log.ts	/^export function create<A extends LogName>(log_name:A)$/;"	f
create	trx/api/core/dal/dal.ts	/^export function create<A extends AtomName>(atom_name:A)$/;"	f
create	trx/api/core/rel/mongo/connection.ts	/^export function create(con_name:ConnectionName, mongo_connection:string, db_name:string)$/;"	f
create	trx/api/core/rel/mongo/relation.ts	/^export function create<A extends AtomName>(atom_name: A)$/;"	f
create	trx/api/lambda/index.ts	/^export function create(lambda_name?:LambdaName)$/;"	f
create	trx/api/lambda/netlify/class.ts	/^export function create():NetlifyLambda{$/;"	f
create	trx/api/service/express/class.ts	/^export function create():ExpressWebService{$/;"	f
create	trx/api/service/index.ts	/^export function create(service_name?:ServiceName)$/;"	f
create	trx/base/class.ts	/^export function create<A extends client_types.AtomName>(atom_name:A)$/;"	f
create	trx/raw/axios.ts	/^export function create(config?: client_types.ClientConfiguration)$/;"	f
create_all_connection	trx/api/core/rel/mongo/models.ts	/^export function create_all_connection():void{$/;"	f
create_basic	trx/api/core/dal/basic.ts	/^export function create_basic<A extends AtomName>(atom_name:A, db_relation:urn_rel.Relation<A>)$/;"	f
create_encrypt	trx/api/core/dal/encrypt.ts	/^export function create_encrypt<A extends AtomName>(atom_name:A)$/;"	f
create_express_auth_route	trx/api/service/express/routes/auth.ts	/^export function create_express_auth_route<A extends types.AuthName>(atom_name:A)$/;"	f
create_express_route	trx/api/service/express/routes/default.ts	/^export function create_express_route<A extends types.AtomName>(atom_name:A)$/;"	f
create_log	trx/api/core/dal/log.ts	/^export function create_log<A extends LogName>(log_name:A)$/;"	f
create_main	trx/api/core/dal/rel.ts	/^export function create_main<A extends AtomName>(atom_name:A)$/;"	f
create_model	trx/api/core/rel/mongo/connection.ts	/^	public create_model<A extends AtomName>(relation_name:A, schema:mongoose.Schema)$/;"	m
create_recycle	trx/api/core/dal/recycle.ts	/^export function create_recycle<A extends AtomName>(atom_name:A)$/;"	f
create_security	trx/api/core/bll/security.ts	/^export function create_security<A extends AtomName>(atom_name:A, passport?:Passport)$/;"	f
create_selfish	trx/api/core/dal/selfish.ts	/^export function create_selfish<A extends AtomName>(atom_name:A)$/;"	f
create_validate	trx/api/core/dal/validate.ts	/^export function create_validate<A extends AtomName>(atom_name:A)$/;"	f
dateformat	nuxt/components/Property/DAY.ts	/^import dateformat from 'dateformat';$/;"	I
dateformat	nuxt/components/Property/TIME.ts	/^import dateformat from 'dateformat';$/;"	I
default_routes	trx/api/routes/client.ts	/^export const default_routes = {$/;"	v
delete	trx/raw/axios.ts	/^	public async delete<R extends client_types.RouteName<A>>(url:string, query?:client_types.Hook.Query<A,R>)$/;"	m
delete_by_id	trx/api/core/acl/acl.ts	/^	public async delete_by_id(id:string)$/;"	m
delete_by_id	trx/api/core/dal/basic.ts	/^	public async delete_by_id(id:string)$/;"	m
delete_by_id	trx/api/core/dal/recycle.ts	/^	public async delete_by_id(id:string)$/;"	m
delete_by_id	trx/api/core/dal/validate.ts	/^	public async delete_by_id(id:string)$/;"	m
delete_by_id	trx/api/core/rel/mongo/relation.ts	/^	public async delete_by_id(id:string)$/;"	m
delete_undefined_optional	trx/api/core/atm/util.ts	/^export function delete_undefined_optional<A extends AtomName>($/;"	f
disconnect	trx/api/core/cnn/cnn.ts	/^export async function disconnect(connection_name?:ConnectionName)$/;"	f
dock	books.ts	/^export const dock = {$/;"	v
dock	trx/api/books.ts	/^export const dock = {$/;"	v
dock	trx/api/core/books.ts	/^export const dock = {$/;"	v
dock	trx/books.ts	/^export const dock = {$/;"	v
empty	trx/api/mdlw/validate.ts	/^export function empty(p:unknown, param_name:string)$/;"	f
empty	trx/api/service/express/routes/validate.ts	/^export function empty(p:unknown, param_name:string)$/;"	f
encrypt_property	trx/api/core/atm/validate.ts	/^export function encrypt_property<A extends AtomName>($/;"	f
enum	trx/api/core/typ/book_srv.ts	/^export const enum BookPermissionType {$/;"	v
enum	trx/api/core/typ/book_srv.ts	/^export const enum BookSecurityType {$/;"	v
enum	trx/api/core/typ/common.ts	/^export const enum BookPropertyType {$/;"	v
enum	trx/api/typ/request.ts	/^export const enum RouteMethod {$/;"	v
express	trx/api/service/express/class.ts	/^import express from 'express';$/;"	I
express	trx/api/service/express/routes/auth.ts	/^import express from 'express';$/;"	I
express	trx/api/service/express/routes/common.ts	/^import express from 'express';$/;"	I
express	trx/api/service/express/routes/default.ts	/^import express from 'express';$/;"	I
express_app	trx/api/service/express/class.ts	/^	public express_app:express.Application;$/;"	m
express_request_to_partial_api_request	trx/api/service/express/routes/common.ts	/^export function express_request_to_partial_api_request<A extends types.AtomName, R extends types.RouteName<A>>(req:express.Request)$/;"	f
filter_uniform_bond_properties	trx/api/core/acl/acl.ts	/^	public filter_uniform_bond_properties<D extends Depth>(molecule:Molecule<A,D>, depth = 0)$/;"	m
find	trx/api/core/bll/basic.ts	/^	public async find<D extends Depth>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
find_by_id	trx/api/core/bll/basic.ts	/^	public async find_by_id<D extends Depth>(id:string, options?:Query.Options<A,D>)$/;"	m
find_one	trx/api/core/bll/basic.ts	/^	public async find_one<D extends Depth>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
fix	trx/api/core/atm/index.ts	/^export const fix = {$/;"	v
generate_mongo_schema_def	trx/api/core/rel/mongo/schema.ts	/^export function generate_mongo_schema_def<A extends AtomName>(atom_name:A)$/;"	f
get	trx/raw/axios.ts	/^	public async get<R extends client_types.RouteName<A>>(url:string, query?:client_types.Hook.Query<A,R>)$/;"	m
get_atom_name_from_atom_path	trx/api/util/request.ts	/^export function get_atom_name_from_atom_path(atom_path:string)$/;"	f
get_auth_action	trx/api/util/request.ts	/^export function get_auth_action(atom_name:types.AtomName, route_name:keyof types.Book.Definition.Dock.Routes)$/;"	f
get_bll_error	trx/api/nst/index.ts	/^export function get_bll_error():urn_core.bll.BLL<'error'>{$/;"	f
get_bll_group	trx/api/core/nst/index.ts	/^export function get_bll_group():bll.BLL<'group'>{$/;"	f
get_bll_request	trx/api/nst/index.ts	/^export function get_bll_request():urn_core.bll.BLL<'request'>{$/;"	f
get_bond	trx/api/core/atm/keys.ts	/^export function get_bond<A extends AtomName>(atom_name:A)$/;"	f
get_bond_array	trx/api/core/atm/keys.ts	/^export function get_bond_array<A extends AtomName>(atom_name:A)$/;"	f
get_bond_non_array	trx/api/core/atm/keys.ts	/^export function get_bond_non_array<A extends AtomName>(atom_name:A)$/;"	f
get_encrypted	trx/api/core/atm/keys.ts	/^export function get_encrypted<A extends AtomName>(atom_name:A)$/;"	f
get_hidden	trx/api/core/atm/keys.ts	/^export function get_hidden<A extends AtomName>(atom_name:A)$/;"	f
get_model	trx/api/core/rel/mongo/models.ts	/^function get_model(conn_name:ConnectionName, atom_name:AtomName)$/;"	f
get_optional	trx/api/core/atm/keys.ts	/^export function get_optional<A extends AtomName>(atom_name:A)$/;"	f
get_params_from_route_path	trx/api/util/request.ts	/^export function get_params_from_route_path<A extends types.AtomName, R extends types.RouteName<A>>($/;"	f
get_route_name	trx/api/util/request.ts	/^export function get_route_name<A extends types.AtomName, R extends types.RouteName<A>>($/;"	f
get_subatom_name	trx/api/core/atm/util.ts	/^export function get_subatom_name<A extends AtomName>(atom_name:A ,atom_key:string)$/;"	f
get_unique	trx/api/core/atm/keys.ts	/^export function get_unique<A extends AtomName>(atom_name:A)$/;"	f
handle	trx/api/lambda/netlify/class.ts	/^	public async handle(event:LambdaEvent, context:LambdaContext)$/;"	m
handle_exception	trx/api/util/exc_handler.ts	/^function handle_exception(service_name:string)$/;"	f
handle_rejected_promise	trx/api/util/exc_handler.ts	/^function handle_rejected_promise(service_name:string)$/;"	f
has_property	trx/api/core/atm/util.ts	/^export function has_property<A extends AtomName>(atom_name:A, key:keyof Atom<A>):boolean;$/;"	f
has_property	trx/api/core/atm/util.ts	/^export function has_property<A extends AtomName>(atom_name:A, key:keyof Atom<A>|string)$/;"	f
has_property	trx/api/core/atm/util.ts	/^export function has_property<A extends AtomName>(atom_name:A, key:string):boolean;$/;"	f
hide_hidden_properties	trx/api/core/atm/util.ts	/^export function hide_hidden_properties<A extends AtomName, D extends Depth>(atom_name:A, molecules:Molecule<A,D>):Molecule<A,D>;$/;"	f
hide_hidden_properties	trx/api/core/atm/util.ts	/^export function hide_hidden_properties<A extends AtomName, D extends Depth>(atom_name:A, molecules:Molecule<A,D>[]):Molecule<A,D>[];$/;"	f
hide_hidden_properties	trx/api/core/atm/util.ts	/^export function hide_hidden_properties<A extends AtomName, D extends Depth>(atom_name:A, molecules:Molecule<A,D>|Molecule<A,D>[])$/;"	f
hook	trx/base/class.ts	/^	public hook<R extends client_types.RouteName<A>, D extends client_types.Depth = 0>(route_name:R)$/;"	m
hooks	trx/hooks/index.ts	/^export const hooks = {$/;"	v
init	trx/api/core/srv/main.ts	/^export function init(config:types.Configuration)$/;"	f
insert_new	trx/api/core/bll/auth.ts	/^	public async insert_new(atom_shape:AtomShape<A>)$/;"	m
insert_new	trx/api/core/bll/basic.ts	/^	public async insert_new(atom_shape:AtomShape<A>)$/;"	m
insert_one	trx/api/core/acl/acl.ts	/^	public async insert_one(atom_shape:AtomShape<A>)$/;"	m
insert_one	trx/api/core/dal/basic.ts	/^	public async insert_one(atom_shape:AtomShape<A>)$/;"	m
insert_one	trx/api/core/dal/encrypt.ts	/^	public async insert_one(atom_shape:AtomShape<A>)$/;"	m
insert_one	trx/api/core/dal/validate.ts	/^	public async insert_one(atom_shape:AtomShape<A>)$/;"	m
insert_one	trx/api/core/rel/mongo/relation.ts	/^	public async insert_one(atom_shape:AtomShape<A>)$/;"	m
is_atom	trx/api/core/atm/util.ts	/^export function is_atom<A extends AtomName>(atom_name:A, atom:Atom<A>)$/;"	f
is_auth_atom	trx/api/core/atm/util.ts	/^export function is_auth_atom<A extends AuthName>(atom:unknown)$/;"	f
is_auth_atom_name	trx/api/core/atm/util.ts	/^export function is_auth_atom_name<A extends AtomName>(atom_name:A)$/;"	f
is_auth_request	trx/api/util/request.ts	/^export function is_auth_request(atom_name: types.AtomName, atom_path: string)$/;"	f
is_molecule	trx/api/core/atm/util.ts	/^export function is_molecule<A extends AtomName, D extends Depth>(atom_name:A, molecule:Molecule<A,D>)$/;"	f
is_optional_property	trx/api/core/atm/util.ts	/^export function is_optional_property<A extends AtomName>(atom_name:A, key:keyof Atom<A>)$/;"	f
is_public_request	trx/api/core/bll/authenticate.ts	/^export function is_public_request<A extends AtomName>(atom_name:A, action: AuthAction)$/;"	f
is_superuser	trx/api/core/bll/authenticate.ts	/^export function is_superuser(passport?:Passport)$/;"	f
is_valid_id	trx/api/core/rel/mongo/relation.ts	/^	public is_valid_id(id:string)$/;"	m
is_valid_passport	trx/api/core/bll/authenticate.ts	/^export function is_valid_passport(passport:Passport)$/;"	f
jwt	trx/api/core/bll/authenticate.ts	/^import jwt from 'jsonwebtoken';$/;"	I
jwt	trx/api/mdlw/mdlw.ts	/^import jwt from 'jsonwebtoken';$/;"	I
keys	trx/api/core/atm/index.ts	/^export const keys = {$/;"	v
lambda_route	trx/api/lambda/netlify/class.ts	/^	public async lambda_route<A extends types.AtomName, R extends types.RouteName<A>>(api_request:types.Api.Request<A,R>){$/;"	m
lib	srv/main.ts	/^import lib from 'urn-lib';$/;"	I
lib	trx/srv/main.ts	/^import lib from 'urn-lib';$/;"	I
log_create	trx/api/core/rel/mongo/log.ts	/^export function log_create<A extends AtomName>(atom_name: A)$/;"	f
map_lambda_query_params	trx/api/lambda/util.ts	/^export function map_lambda_query_params(json:QueryParamsObject)$/;"	f
mixins	nuxt/components/Property/ATOM.ts	/^import mixins from 'vue-typed-mixins';$/;"	I
mixins	nuxt/components/Property/ATOMARRAY.ts	/^import mixins from 'vue-typed-mixins';$/;"	I
mixins	nuxt/components/Property/BINARY.ts	/^import mixins from 'vue-typed-mixins';$/;"	I
mixins	nuxt/components/Property/DAY.ts	/^import mixins from 'vue-typed-mixins';$/;"	I
mixins	nuxt/components/Property/ENUM.ts	/^import mixins from 'vue-typed-mixins';$/;"	I
mixins	nuxt/components/Property/FLOAT.ts	/^import mixins from 'vue-typed-mixins';$/;"	I
mixins	nuxt/components/Property/INTEGER.ts	/^import mixins from 'vue-typed-mixins';$/;"	I
mixins	nuxt/components/Property/SET.ts	/^import mixins from 'vue-typed-mixins';$/;"	I
mixins	nuxt/components/Property/TIME.ts	/^import mixins from 'vue-typed-mixins';$/;"	I
molecule	trx/api/core/atm/validate.ts	/^export function molecule<A extends AtomName, D extends Depth>($/;"	f
molecule_primitive_properties	trx/api/core/atm/validate.ts	/^export function molecule_primitive_properties<A extends AtomName, D extends Depth>($/;"	f
molecule_to_atom	trx/api/core/atm/util.ts	/^export function molecule_to_atom<A extends AtomName, D extends Depth>($/;"	f
mongo_app	trx/api/core/rel/mongo/models.ts	/^export const mongo_app:MongoApp = {};$/;"	v
mongoose	trx/api/core/rel/mongo/connection.ts	/^import mongoose from 'mongoose';$/;"	I
mongoose	trx/api/core/rel/mongo/models.ts	/^import mongoose from 'mongoose';$/;"	I
mongoose	trx/api/core/rel/mongo/relation.ts	/^import mongoose from 'mongoose';$/;"	I
mongoose	trx/api/core/rel/mongo/schema.ts	/^import mongoose from 'mongoose';$/;"	I
mongoose	trx/api/core/rel/mongo/types.ts	/^import mongoose from 'mongoose';$/;"	I
mutations	nuxt/store/modalAtom.ts	/^export const mutations: MutationTree<RootState> = {$/;"	v
name	trx/api/core/rel/mongo/connection.ts	/^	public name:ConnectionName;$/;"	m
only_valid_param_keys	trx/api/mdlw/validate.ts	/^export function only_valid_param_keys(params:unknown, valid_params_keys:string[])$/;"	f
only_valid_param_keys	trx/api/service/express/routes/validate.ts	/^export function only_valid_param_keys(params:unknown, valid_params_keys:string[])$/;"	f
only_valid_query_keys	trx/api/mdlw/validate.ts	/^export function only_valid_query_keys(query:unknown, valid_query_keys:string[])$/;"	f
only_valid_query_keys	trx/api/service/express/routes/validate.ts	/^export function only_valid_query_keys(query:unknown, valid_query_keys:string[])$/;"	f
parse_param	trx/api/lambda/util.ts	/^function parse_param(json:QueryParamsObject) {$/;"	f
partial_api_request_to_atom_request	trx/api/util/request.ts	/^export function partial_api_request_to_atom_request<A extends types.AtomName, R extends types.RouteName<A>>($/;"	f
passport_has_all_keys	trx/api/core/bll/authenticate.ts	/^function passport_has_all_keys(passport:Passport)$/;"	f
passport_has_correct_type_values	trx/api/core/bll/authenticate.ts	/^function passport_has_correct_type_values(passport:Passport)$/;"	f
passport_has_no_other_keys	trx/api/core/bll/authenticate.ts	/^function passport_has_no_other_keys(passport:Passport)$/;"	f
post	trx/raw/axios.ts	/^	public async post<R extends client_types.RouteName<A>>(url:string, body:any, query?:client_types.Hook.Query<A,R>)$/;"	m
process_request_path	trx/api/util/request.ts	/^export function process_request_path(full_path:string)$/;"	f
process_request_query	trx/api/mdlw/validate.ts	/^export function process_request_query<A extends AtomName>(query:Query<A>|undefined)$/;"	f
process_request_query	trx/api/service/express/routes/validate.ts	/^export function process_request_query<A extends AtomName>(query:ExpressQueryParam)$/;"	f
properties	trx/api/core/atm/encrypt.ts	/^export async function properties<A extends AtomName>(atom_name:A, atom:AtomShape<A>):Promise<AtomShape<A>>$/;"	f
properties	trx/api/core/atm/encrypt.ts	/^export async function properties<A extends AtomName>(atom_name:A, atom:Partial<AtomShape<A>>)$/;"	f
property	trx/api/core/atm/encrypt.ts	/^export async function property<A extends AtomName>$/;"	f
property	trx/api/core/atm/fix.ts	/^export function property<A extends AtomName, D extends Depth>($/;"	f
property	trx/api/core/atm/fix.ts	/^export function property<A extends AtomName>($/;"	f
property	trx/api/core/atm/validate.ts	/^export function property<A extends AtomName>($/;"	f
raw	trx/base/class.ts	/^	private raw:client_types.RAW<A>;$/;"	m
readyState	trx/api/core/rel/mongo/connection.ts	/^	public readyState:number;$/;"	m
recursively_check_if_array	trx/api/lambda/util.ts	/^function recursively_check_if_array(parentObj:QueryParamsObject) {$/;"	f
register_exception_handler	trx/api/util/exc_handler.ts	/^export function register_exception_handler(name:string):void {$/;"	f
remove_by_id	trx/api/core/bll/basic.ts	/^	public async remove_by_id(id:string)$/;"	m
remove_one	trx/api/core/bll/basic.ts	/^	public async remove_one<D extends Depth>(molecule:Molecule<A,D>)$/;"	m
replace_by_id	trx/api/core/rel/mongo/relation.ts	/^	public async replace_by_id(id:string, atom:AtomShape<A>)$/;"	m
return_default_routes	trx/api/routes/server.ts	/^export function return_default_routes(atom_name:types.AtomName)$/;"	f
return_uranio_response_to_express	trx/api/service/express/routes/common.ts	/^export function return_uranio_response_to_express(urn_res:urn_response.General<any,any>, res:express.Response)$/;"	f
route_def	trx/api/routes/client.ts	/^export function route_def<A extends types.AtomName>(atom_name:A, route_name:types.RouteName<A>)$/;"	f
route_def	trx/api/routes/routes.ts	/^export function route_def<A extends types.AtomName>($/;"	f
route_def	trx/api/routes/server.ts	/^export function route_def<A extends types.AtomName, R extends types.RouteName<A>>(atom_name:A, route_name:R)$/;"	f
route_middleware	trx/api/mdlw/mdlw.ts	/^export async function route_middleware<A extends types.AtomName, R extends types.RouteName<A>>(api_request:types.Api.Request<A,R>)$/;"	f
select	trx/api/core/acl/acl.ts	/^	public async select<D extends Depth>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
select	trx/api/core/dal/basic.ts	/^	public async select<D extends Depth = 0>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
select	trx/api/core/dal/validate.ts	/^	public async select<D extends Depth = 0>(query:Query<A>, options?:Query.Options<A, D>)$/;"	m
select	trx/api/core/rel/mongo/relation.ts	/^	public async select<D extends Depth>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
select_by_id	trx/api/core/acl/acl.ts	/^	public async select_by_id<D extends Depth>(id:string, options?:Query.Options<A,D>)$/;"	m
select_by_id	trx/api/core/dal/basic.ts	/^	public async select_by_id<D extends Depth = 0>(id:string, options?:Query.Options<A,D>)$/;"	m
select_by_id	trx/api/core/dal/validate.ts	/^	public async select_by_id<D extends Depth = 0>(id:string, options?:Query.Options<A,D>)$/;"	m
select_by_id	trx/api/core/rel/mongo/relation.ts	/^	public async select_by_id<D extends Depth>(id:string, options?:Query.Options<A,D>)$/;"	m
select_one	trx/api/core/acl/acl.ts	/^	public async select_one<D extends Depth>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
select_one	trx/api/core/dal/basic.ts	/^	public async select_one<D extends Depth = 0>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
select_one	trx/api/core/dal/validate.ts	/^	public async select_one<D extends Depth = 0>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
select_one	trx/api/core/rel/mongo/relation.ts	/^	public async select_one<D extends Depth>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
shared	nuxt/components/Property/ATOM.ts	/^import shared from '.\/Shared';$/;"	I
shared	nuxt/components/Property/ATOMARRAY.ts	/^import shared from '.\/Shared';$/;"	I
shared	nuxt/components/Property/BINARY.ts	/^import shared from '.\/Shared';$/;"	I
shared	nuxt/components/Property/DAY.ts	/^import shared from '.\/Shared';$/;"	I
shared	nuxt/components/Property/EMAIL.ts	/^import shared from '.\/Shared';$/;"	I
shared	nuxt/components/Property/ENCRYPTED.ts	/^import shared from '.\/Shared';$/;"	I
shared	nuxt/components/Property/ENUM.ts	/^import shared from '.\/Shared';$/;"	I
shared	nuxt/components/Property/FLOAT.ts	/^import shared from '.\/Shared';$/;"	I
shared	nuxt/components/Property/HIDDEN.ts	/^import shared from '.\/Shared';$/;"	I
shared	nuxt/components/Property/INTEGER.ts	/^import shared from '.\/Shared';$/;"	I
shared	nuxt/components/Property/LONGTEXT.ts	/^import shared from '.\/Shared';$/;"	I
shared	nuxt/components/Property/ReadOnly.ts	/^import shared from '.\/Shared';$/;"	I
shared	nuxt/components/Property/SET.ts	/^import shared from '.\/Shared';$/;"	I
shared	nuxt/components/Property/TEXT.ts	/^import shared from '.\/Shared';$/;"	I
shared	nuxt/components/Property/TIME.ts	/^import shared from '.\/Shared';$/;"	I
state	nuxt/store/modalAtom.ts	/^export const state = ():ReturnState => ({$/;"	v
store_error	trx/api/util/request.ts	/^export function store_error($/;"	f
trash_create	trx/api/core/rel/mongo/trash.ts	/^export function trash_create<A extends AtomName>(atom_name: A)$/;"	f
trash_dal	trx/api/core/dal/recycle.ts	/^	public get trash_dal():BasicDAL<A>{$/;"	m
trx	cln/main.ts	/^import trx from 'uranio-trx\/client';$/;"	I
trx	srv/main.ts	/^import trx from 'uranio-trx';$/;"	I
trx_client_config	trx/cln/defaults.ts	/^export const trx_client_config:FullClientConfiguration = {$/;"	v
trx_config	conf/defaults.ts	/^export const trx_config:FullConfiguration = {$/;"	v
trx_config	trx/conf/defaults.ts	/^export const trx_config:FullConfiguration = {$/;"	v
update_by_id	trx/api/core/bll/basic.ts	/^	public async update_by_id(id:string, partial_atom:Partial<AtomShape<A>>)$/;"	m
update_one	trx/api/core/bll/basic.ts	/^	public async update_one(atom:Atom<A>)$/;"	m
uranio	nuxt/components/AtomNav.ts	/^import uranio from 'uranio';$/;"	I
uranio	nuxt/components/Form/Atom.ts	/^import uranio from 'uranio';$/;"	I
uranio	nuxt/components/Modal/Atom.ts	/^import uranio from 'uranio';$/;"	I
uranio	nuxt/components/Property.ts	/^import uranio from 'uranio';$/;"	I
uranio	nuxt/components/Property/ATOM.ts	/^import uranio from "uranio";$/;"	I
uranio	nuxt/components/Property/ATOMARRAY.ts	/^import uranio from 'uranio';$/;"	I
uranio	nuxt/components/Property/ENUM.ts	/^import uranio from "uranio";$/;"	I
uranio	nuxt/components/Property/FLOAT.ts	/^import uranio from 'uranio';$/;"	I
uranio	nuxt/components/Property/SET.ts	/^import uranio from "uranio";$/;"	I
uranio	nuxt/components/Property/Shared.ts	/^import uranio from 'uranio';$/;"	I
uranio	nuxt/components/UI/AllBodyHeader/AllBodyHeader.ts	/^import uranio from 'uranio';$/;"	I
uranio	nuxt/components/UI/AllTable/AllTable.ts	/^import uranio from 'uranio';$/;"	I
uranio	nuxt/pages/urn-admin/_atom/_slug.ts	/^import uranio from 'uranio';$/;"	I
uranio	nuxt/pages/urn-admin/_atom/new.ts	/^import uranio from 'uranio';$/;"	I
uranio	nuxt/pages/urn-admin/_slug.ts	/^import uranio from 'uranio';$/;"	I
uranio	nuxt/store/modalAtom.ts	/^import uranio from 'uranio';$/;"	I
uranio	run.ts	/^import uranio from '.\/index';$/;"	I
uranio	trx/api/books.ts	/^import uranio from 'uranio';$/;"	I
uranio	trx/api/core/books.ts	/^import uranio from 'uranio';$/;"	I
uranio	trx/run.ts	/^import uranio from '.\/index';$/;"	I
uri	trx/api/core/rel/mongo/connection.ts	/^	public uri:string;$/;"	m
urn_api	trx/api/run.ts	/^import urn_api from '.\/index';$/;"	I
urn_api_client	trx/base/class.ts	/^import urn_api_client from 'uranio-api\/client';$/;"	I
urn_core	trx/api/core/run.ts	/^import urn_core from '.\/index';$/;"	I
urn_core	trx/api/lambda/netlify/class.ts	/^import urn_core from 'uranio-core';$/;"	I
urn_core	trx/api/mdlw/mdlw.ts	/^import urn_core from 'uranio-core';$/;"	I
urn_core	trx/api/nst/index.ts	/^import urn_core from 'uranio-core';$/;"	I
urn_core	trx/api/routes/server.ts	/^import urn_core from 'uranio-core';$/;"	I
urn_core	trx/api/service/express/routes/auth.ts	/^import urn_core from 'uranio-core';$/;"	I
urn_core	trx/api/typ/book_srv.ts	/^import urn_core from 'uranio-core';$/;"	I
urn_core_client	trx/api/typ/book_cln.ts	/^import urn_core_client from 'uranio-core\/client';$/;"	I
urn_lib	trx/api/srv/main.ts	/^import urn_lib from 'urn-lib';$/;"	I
urn_trx	typ/book_srv.ts	/^import urn_trx from 'uranio-trx';$/;"	I
urn_trx_client	typ/book_cln.ts	/^import urn_trx_client from 'uranio-trx\/client';$/;"	I
util	trx/api/core/atm/index.ts	/^export const util = {$/;"	v
validate	trx/api/core/atm/index.ts	/^export const validate = {$/;"	v
validate	trx/api/core/dal/selfish.ts	/^	protected async validate(molecule:Atom<A>):Promise<Atom<A>>;$/;"	m
validate	trx/api/core/dal/selfish.ts	/^	protected async validate(molecule:Atom<A>, depth?:0):Promise<Atom<A>>;$/;"	m
validate	trx/api/core/dal/selfish.ts	/^	protected async validate<D extends Depth>(molecule:Molecule<A,D> | Atom<A>, depth?:D)$/;"	m
validate	trx/api/core/dal/selfish.ts	/^	protected async validate<D extends Depth>(molecule:Molecule<A,D>, depth?:D):Promise<Molecule<A,D>>;$/;"	m
validate	trx/api/core/dal/validate.ts	/^	protected async validate(molecule:Atom<A>):Promise<Atom<A>>;$/;"	m
validate	trx/api/core/dal/validate.ts	/^	protected async validate(molecule:Atom<A>, depth?:0):Promise<Atom<A>>;$/;"	m
validate	trx/api/core/dal/validate.ts	/^	protected async validate<D extends Depth>(molecule:Molecule<A,D> | Atom<A>, depth?:D)$/;"	m
validate	trx/api/core/dal/validate.ts	/^	protected async validate<D extends Depth>(molecule:Molecule<A,D>, depth?:D):Promise<Molecule<A,D>>$/;"	m
validate_filter	trx/api/core/val/query.ts	/^function validate_filter<A extends AtomName>(query:Query<A>, atom_name:A)$/;"	f
validate_filter_options_params	trx/api/core/val/query.ts	/^export function validate_filter_options_params<A extends AtomName, D extends Depth>$/;"	f
validate_options	trx/api/core/val/query.ts	/^function validate_options<A extends AtomName, D extends Depth>(options:Query.Options<A,D>, atom_name:A)$/;"	f
validate_request	trx/api/util/request.ts	/^export function validate_request<A extends types.AtomName, R extends types.RouteName<A>>($/;"	f
